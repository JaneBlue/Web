@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/Diagnosis_Layout.cshtml";
}
<p id="ocx">
    <object id="Reporter2" classid="clsid:466F909A-0EE1-4F40-A2CA-9906C5E36CB2" width="920"
        height="540">
    </object>
</p>
<script type="text/javascript">
    $(function () {
                $("#认知检查").addClass("selected");   
                $(".active").next().addClass("active");
                $(".active").first().removeClass("active");
       
                var OCX = document.getElementById('Reporter2');
        try {
            OCX.OpenReport("D:\\Web\\LNCDCDSS\\LNCDCDSS\\GeneratedTemplate");
              }
         catch (err)
          {
            var b = confirm("是否下载显示控件");
            if (b) {//download installer
                var strOCXURL;
              strOCXURL= "http://"+location.host+"/LNCDCDSS/CDSSOCX.exe";
            //window.alert(strOCXURL);
             window.location.href = strOCXURL;
            }
        }
           var obj = eval ("(" + @Html.Raw(Json.Encode(ViewData["data"]))+ ")");

           //get archetypes' list
           var list_archetypes = obj.archetypesFromReporter;
           for(var index_archetypes = 0; index_archetypes < list_archetypes.length; ++index_archetypes)
           {
                //get archetype ID
                var strArchetypeID = list_archetypes[index_archetypes].ArchetypeID;
                var list_values = list_archetypes[index_archetypes].valuesFromReporter;
                for(var index_values = 0; index_values < list_values.length; ++index_values)
                {
                    //get path in archetype
                    var strPath = list_values[index_values].Path;
                    //get value in archetype
                    var strValue = list_values[index_values].Value;

                    //set value into OCX
                    OCX.SetOpenEHRData(strArchetypeID, strPath, strValue);
                }
           }

           OCX.ShowReport();
           OCX.ShowThisPage("认知检查");
       
           $("#btn2").hide();
           $("#btn2").click(function () {


            $(".selected").last().removeClass("selected");
            var name = $(".selected").last().attr("id");
            $(".active").prev().addClass("active");
            $(".active").last().removeClass("active");
            OCX.ShowReport();
            OCX.ShowThisPage(name);
           
            if (name == "认知检查") {
                $("#btn2").hide();
            }
            if (name == "影像检查") {
                $("#b1").html("下一步");
            }
        });
        $("#btn1").click(function () {
            //var thing = { pma: [ { Id: 2, MC1: 'jquery-json', MC2: 'jquery-json', MC3: 'jquery-json', MC4: 'jquery-json', MC5: 'jquery-json', MC6: 'jquery-json', MC7: 'jquery-json', MC8: 'jquery-json', MC9: 'jquery-json', Total: 'jquery-json' }, { Id: 3, MC1: 'jquery-json', MC2: 'jquery-json', MC3: 'jquery-json', MC4: 'jquery-json', MC5: 'jquery-json', MC6: 'jquery-json', MC7: 'jquery-json', MC8: 'jquery-json', MC9: 'jquery-json', Total: 'jquery-json'} ] };
            $("#btn2").show();
            //create valuesFromReporter list
            var archetypesFromReporter = new Array();
            //insert valuesFromReporter list
            var strValuesFromReporter = "";
            var strArchetypeIDs = OCX.GetArchetypeIDs();
            var list_ArchetypeIDs = new Array();
            GetReportData(strArchetypeIDs, list_ArchetypeIDs);
            for(var indexArchetypeID = 0; indexArchetypeID < list_ArchetypeIDs.length; ++indexArchetypeID)
            {
                //get archetype ID
                var strArchetypeID = list_ArchetypeIDs[indexArchetypeID];
                //create valuesFromReporter list
                var valuesFromReporter = new Array();
                //get valuesFromReporter list
                var strArchetypePaths = OCX.GetArchetypePaths(strArchetypeID);
                var list_ArchetypePaths = new Array();
                GetReportData(strArchetypePaths, list_ArchetypePaths);
                var lengthArchetypePaths = list_ArchetypePaths.length;
                for(var indexArchetypePaths = 0; indexArchetypePaths < lengthArchetypePaths; ++indexArchetypePaths)
                {
                    var strArchetypePath = list_ArchetypePaths[indexArchetypePaths];
                    var strOpenEHRData = OCX.GetOpenEHRData(strArchetypeID, strArchetypePath);
                    var valueFromReporter = new ValueFromReporter(strArchetypePath, strOpenEHRData);
                    valuesFromReporter.push(valueFromReporter);
                }
                //create ArchetypeFromReporter
                var archetypeFromReporter = new ArchetypeFromReporter(strArchetypeID, valuesFromReporter);
                //set the archetypeFromReporter into archetypesFromReporter
                archetypesFromReporter.push(archetypeFromReporter);
            }

            //convert to javascript object
            var thingDataFromReporter = new DataFromReporter(archetypesFromReporter);
            //convert javascript object to json
            var encoded = $.toJSON(thingDataFromReporter);


            if ($(".selected").last().attr("id") == "辅助诊断") {
                $("#ocx").hide();
                  $(".active").wBox({title: "提示信息", html: "<div class='demo'><img src='../../Content/images/wait.gif'/></div>", show: true  });
                $.ajax({
                    url: '@Url.Action("SaveContinue", "Diagnosis")',
                    type: "POST",
                    data: { postjson: encoded },
                    success: function (data) {
                        if (data.OK) {
                          $(".demo").html("本次问诊信息保存成功！");
                            var t = setTimeout("  window.location.href = '@Url.Action("Index", "EnterPatInfor")'", 6000);

                        
                        }
                        else {
                            document.getElementById("msg").innerHTML = data.Message.toString();

                        }

                    },
                    error: function (jqXhr, textStatus, errorThrown) {
                        alert("Error '" + jqXhr.status + "' (textStatus: '" + textStatus + "', errorThrown: '" + errorThrown + "')");
                    }
                });
            }
            else {
                $(".selected").next().addClass("selected");
                var name = $(".selected").last().attr("id");
                $(".active").next().addClass("active");
                $(".active").first().removeClass("active");
                //var OCX = document.getElementById('Reporter2');
                //var b = OCX.OpenReport("D:\\2013CDSS\\TemplateForReporter\\LNCDtemp");

                //set the CDSSDiagnoses default result
                OCX.SetData("Data_source/VisitRecord/CDSSDiagnosis", "        " + "正在推理中。。。");

                OCX.ShowReport();
                OCX.ShowThisPage(name);
                if (name == "辅助诊断") {
                    $.ajax({
                        url: '@Url.Action("ContinueCDSSdiagnosis", "Diagnosis")',
                        type: "POST",
                        data: { postjson: encoded },
                        success: function (data) {
                            if (data.OK) {
                                OCX.SetData("Data_source/VisitRecord/CDSSDiagnosis", "        " + data.Message);
                            }
                            else {
                                document.getElementById("msg").innerHTML = data.Message.toString();

                            }

                        },
                        error: function (jqXhr, textStatus, errorThrown) {
                            alert("Error '" + jqXhr.status + "' (textStatus: '" + textStatus + "', errorThrown: '" + errorThrown + "')");
                        }
                    });
                    $("#b1").html("保存");
                }

            }


        });
    });
  
    function DataFromReporter(archetypesFromReporter)
    {
        this.archetypesFromReporter = archetypesFromReporter;
    }

    function ArchetypeFromReporter(ArchetypeID, valuesFromReporter)
    {
        this.ArchetypeID = ArchetypeID;
        this.valuesFromReporter = valuesFromReporter;
    }

    function ValueFromReporter(Path, Value)
    {
        this.Path = Path;
        this.Value = Value;
    }

    function GetReportData(stringFromReporterOCX, list_string) 
    {
        var FirIndex = stringFromReporterOCX.indexOf(",");
        while(0 != FirIndex && -1 != FirIndex)
        {
            var oneString = stringFromReporterOCX.substring(0, FirIndex);
            list_string.push(oneString);
            stringFromReporterOCX = stringFromReporterOCX.substring(FirIndex + 1);
            FirIndex = stringFromReporterOCX.indexOf(",");
        }
    }

</script>
